
anParameter.lowSize = 6;
anParameter.maxSize = 250;
anParameter.divideSize = 34;

set(0,'DefaultAxesFontSize',15);
set(0,'DefaultAxesLineWidth',2);

anParameter.ParInfoFolder = 'E:\JFJ2012\msFiles';
%fileNr = 5;
%fileNr = 13;
%fileNr = 23;
%fileNr = 30;
if ~exist(anParameter.ParInfoFolder,'dir'), mkdir(anParameter.ParInfoFolder); end
cd(anParameter.ParInfoFolder);
anParameter.ParInfoFiles = dir('*_ms.mat');
anParameter.ParInfoFiles = {anParameter.ParInfoFiles.name};

everyFile = 5;
for cnt2 = 1:numel(anParameter.ParInfoFiles)
    if  rem(cnt2,everyFile)==0
        dataAll = load(anParameter.ParInfoFiles{fileNr});
        dataAll = dataAll.outFile;
        fileNr = cn
        anParameter.cfg = config(fullfile('E:\JFJ2012', 'holoviewer.cfg'));
        [anParameter.histBinBorder anParameter.histBinSizes anParameter.histBinMiddle] ...
            = getHistBorder(anParameter.divideSize, anParameter.maxSize, anParameter.cfg, 1);
        [anParameter.histBinBorderOldSizes anParameter.histBinSizesOldSizes anParameter.histBinMiddleOldSizes] ...
            = getHistBorder(anParameter.divideSize, anParameter.maxSize, anParameter.cfg, 0);
        
        anParameter.ParImageFolder = fullfile('E:\JFJ2012\Particle',anParameter.ParInfoFiles{fileNr}(1:end-7));
        if ~exist(anParameter.ParImageFolder,'dir'), mkdir(anParameter.ParImageFolder); end
        cd(anParameter.ParImageFolder);
        
        %Predict Class of Particles
        dataAll.pStats = predictClass(dataAll.pStats);
        
        for sizeBin = 2:numel(anParameter.histBinMiddle)
            
            anParameter.ParBinFolder{sizeBin} = fullfile(anParameter.ParImageFolder, ...
                [num2str(sizeBin, '%02u') '-' num2str(round(anParameter.histBinMiddle(sizeBin)), '%03u')]);
            if ~exist(anParameter.ParBinFolder{sizeBin},'dir'), mkdir(anParameter.ParBinFolder{sizeBin}); end
            cd(anParameter.ParBinFolder{sizeBin});
            
            binIndex = dataAll.pStats.pDiamOldThresh > anParameter.histBinBorder(sizeBin)*1e-6 ...
                & dataAll.pStats.pDiamOldThresh <= anParameter.histBinBorder(sizeBin+1)*1e-6...
                & dataAll.pStats.partIsReal;
            binImages = dataAll.pStats.pImage(binIndex);
            binClass = dataAll.pStats.predictedHClass(binIndex);
            if ~isempty(binImages)
                for cnt = 1:numel(binImages)
                    imageAmp = abs(binImages{cnt});
                    imageAmp = imageAmp - min(min(imageAmp));
                    imageAmp = imageAmp / max(max(imageAmp));
                    
                    imagePh = angle(binImages{cnt});
                    image = [imageAmp imagePh];
                    fileName = [char(binClass(cnt)) num2str(cnt, '%04u') '.png'];
                    imwrite(image,fileName);
                end
            end
        end
    end
end
